% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pre-action-resample.R
\name{add_resample}
\alias{add_resample}
\alias{remove_resample}
\alias{update_resample}
\title{Add a resample specification to a workflow}
\usage{
add_resample(x, .f, ...)

remove_resample(x)

update_resample(x, .f, ...)
}
\arguments{
\item{x}{A workflow}

\item{.f}{A function to be applied to the dataset in the workflow. Must
return an object of class \code{rset}. See package
\code{\link[rsample]{rsample}}.}

\item{...}{arguments passed to \code{.f}. These arguments must be named.
The processing of \code{...} respects the quotation rules from \code{.f}.
In other words, if the function allows variables as strings \strong{and}
as names, the user can specify both. See the example sections.}
}
\value{
\code{x}, updated with either a new or removed resample specification.
}
\description{
\itemize{
\item \code{add_resample()} specifies the type of resample used in the analysis. It
accepts a function \code{.f} that will be applied to the data. Only
functions which return an \code{rset} object will be allowed. See
package \code{\link[rsample]{rsample}} and the details section.
\item \code{remove_resample()} removes the resample specification from the workflow.
Note that it keeps other preprocessing steps such as the recipe.
\item \code{update_resample()} first removes the resample, then adds a new resample
specification. Any model that has already been fit based on this
split will need to be refit.
}
}
\details{
The resample specification is an optional step in the workflow. You can add a
dataframe, prepare a recipe and fit the model without splitting into
training/testing.

When applied to the data, the function \code{.f} must return an object
of class \code{rset}. These are functions which come from the
\code{\link[rsample]{rsample}} package.
}
\examples{
library(rsample)

wf <- workflow()
wf <- add_data(wf, mtcars)

# Strata as string
wf <- add_resample(wf, vfold_cv, v = 5, strata = "cyl")

wf

# Strata as unquoted name
wf <- update_resample(wf, initial_split, v = 5, strata = cyl)

wf

remove_resample(wf)

# New split function
update_resample(wf, bootstraps)

}

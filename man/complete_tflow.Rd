% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complete_wflow.R
\name{complete_tflow}
\alias{complete_tflow}
\title{Fit the best model from a tuning grid}
\usage{
complete_tflow(x, best_params, control = control_tidyflow())
}
\arguments{
\item{x}{A tidyflow}

\item{best_params}{A 1 row tibble with the best parameters to fit the final model. Ideally, the result of \code{\link[tune]{select_best}}.}

\item{control}{A \code{\link[=control_tidyflow]{control_tidyflow()}} object}
}
\value{
The tidyflow \code{object}, updated with a fit parsnip model. Can be extracted
with \code{\link{pull_tflow_fit}}.
}
\description{
Fitting a tidyflow currently involves two main steps:
\itemize{
\item Preprocessing the data using a formula preprocessor, or by calling
\code{\link[recipes:prep]{recipes::prep()}} on a recipe.
\item Fitting the underlying parsnip model using \code{\link[parsnip:fit.model_spec]{parsnip::fit.model_spec()}}.
}
}
\details{
In the future, there will also be \emph{postprocessing} steps that can be added
after the model has been fit.
}
\examples{
library(parsnip)
library(tune)
library(dials)
library(rsample)

# Fit a regularized regression through a grid search.
# Do this by updating the already defined model:
new_mod <- set_engine(linear_reg(penalty = tune(), mixture = tune()),
                      "glmnet")
tuned_res <-
 mtcars \%>\%
  tidyflow() \%>\% 
  plug_resample(vfold_cv) \%>\% 
  plug_formula(mpg ~ .) \%>\% 
  plug_model(new_mod) \%>\%
  plug_grid(grid_regular) \%>\%
  fit()

# Extract the tuning fit:
best_params <- select_best(pull_tflow_fit_tuning(tuned_res), "rmse")

final_model <-
  tuned_res \%>\%
  complete_tflow(best_params)

# Extract final model with:
pull_tflow_fit(final_model)

}

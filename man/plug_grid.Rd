% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pre-action-grid.R
\name{plug_grid}
\alias{plug_grid}
\alias{drop_grid}
\alias{replace_grid}
\title{Add a split specification to a tidyflow}
\usage{
plug_grid(x, .f, ...)

drop_grid(x)

replace_grid(x, .f, ...)
}
\arguments{
\item{x}{A tidyflow}

\item{.f}{A function which will be passed the tuned arguments from the model
and recipe. Must return an object of class \code{param_grid}. See package
\code{\link[dials]{dials}}.}

\item{...}{arguments passed to \code{.f}. The processing of \code{...}
respects the quotation rules from \code{.f}. In other words, if the function
allows variables as strings \strong{and} as names, the user can specify both.
See the example sections.}
}
\value{
\code{x}, updated with either a new or removed grid specification.
}
\description{
\itemize{
\item \code{plug_grid()} specifies the type of grid used in the model tuning. It
accepts a function \code{.f} that will be fed the tuning parameters defined
in the model and the recip. Only functions which return a \code{param_grid}
object will be allowed. See package \code{\link[dials]{dials}} and
the details section. If a model has been fit before adding the grid,
it will need to be refit.
\item \code{drop_grid()} removes the grid specification from the tidyflow. Note
that it keeps other preprocessing steps such as the recipe and model.
\item \code{replace_grid()} first removes the grid, then adds a new grid
specification. Any model that has already been fit based on this
split will need to be refit.
}
}
\details{
The grid specification is an optional step in the tidyflow. You can add a
dataframe, prepare a recipe and fit the model without adding a grid
specification.

The tuning parameters defined in the model and recipe are extracted
and passed to \code{.f}. This should return an object of class
\code{param_grid}. These functions come from the \code{\link[dials]{dials}}
package.
}
\examples{
library(rsample)

wf <- tidyflow()
wf <- plug_data(wf, mtcars)

# Strata as string
wf <- plug_grid(wf, initial_split, prop = 0.8, strata = "cyl")

wf

# Strata as unquoted name
wf <- replace_grid(wf, initial_split, prop = 0.8, strata = cyl)

wf

drop_grid(wf)

# New split function
replace_grid(wf, initial_time_split)

}
